<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:MSUScripter.ViewModels"
        xmlns:controls1="clr-namespace:AvaloniaControls.Controls;assembly=AvaloniaControls"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="300"
        Width="650" Height="200"
        x:Class="MSUScripter.Views.SettingsWindow"
        Icon="/Assets/MSUScripterIcon.ico"
        SizeToContent="Height"
        Title="Settings - MSU Scripter"
        WindowStartupLocation="CenterOwner"
        x:DataType="viewModels:SettingsWindowViewModel">
    <LayoutTransformControl Name="MainLayout">
        <DockPanel>
            
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" Margin="0" HorizontalAlignment="Center">
                <Button
                    Name="SaveButton"
                    Margin="5 5"
                    Padding="8 5"
                    Content="Save Settings"
                    Click="SaveButton_OnClick"
                ></Button>
                <Button
                    Name="CancelButton"
                    Margin="5 5"
                    Padding="8 5"
                    Content="Cancel"
                    Click="CancelButton_OnClick"
                ></Button>
            </StackPanel>
            
            <StackPanel Orientation="Vertical" Grid.IsSharedSizeScope="True" Margin="5">
                
                <controls1:LabeledControl Text="MsuPcm++ Path: ">
                    <Grid ColumnDefinitions="*,Auto">
                        <controls1:FileControl
                            Grid.Column="0"
                            FilePath="{Binding MsuPcmPath, Mode=TwoWay}"
                            FileInputType="OpenFile"
                        ></controls1:FileControl>
                        <Button Grid.Column="1"
                                Name="ValidateMsuPcmButton"
                                Margin="5 0 0 0"
                                Click="ValidateMsuPcmButton_OnClick"
                        >
                            Validate
                        </Button>
                    </Grid>
                    
                </controls1:LabeledControl>
                
                <controls1:LabeledControl Text="Check for Updates:" Hint="Shows a popup when first launching when there is a new update on GitHub." DisplayHint="True">
                    <controls1:BoolComboBox AllowNulls="False" Value="{Binding PromptOnUpdate, Mode=TwoWay}" />
                </controls1:LabeledControl>
                
                <controls1:LabeledControl Text="Include Pre-Releases:" Hint="When checking for new updates, alert on pre-release versions in addition to full releases." DisplayHint="True">
                    <controls1:BoolComboBox AllowNulls="False" IsEnabled="{Binding PromptOnUpdate, Mode=TwoWay}" Value="{Binding PromptOnPreRelease, Mode=TwoWay}" />
                </controls1:LabeledControl>
                
                <controls1:LabeledControl Text="Use Dark Theme:">
                    <controls1:BoolComboBox AllowNulls="False" Value="{Binding DarkTheme, Mode=TwoWay}" />
                </controls1:LabeledControl>
                
                <controls1:LabeledControl Text="Hide Sub Track + Sub Channel Warning:" Hint="Hides the popup warning when you try to add a sub track and sub channel on the same level." DisplayHint="True">
                    <controls1:BoolComboBox AllowNulls="False" Value="{Binding HideSubTracksSubChannelsWarning, Mode=TwoWay}" />
                </controls1:LabeledControl>
                
                <controls1:LabeledControl Text="Automatically Run PyMusicLooper:" Hint="Automatically run PyMusicLooper in the PyMusicLooper window and Add Song Window." DisplayHint="True">
                    <controls1:BoolComboBox AllowNulls="False" Value="{Binding AutomaticallyRunPyMusicLooper, Mode=TwoWay}" />
                </controls1:LabeledControl>
                
                <controls1:LabeledControl Text="Loop Test Duration:" Hint="When testing the loop, how long before the end of the song to start playing. On Linux, this also affects how long it will play after the looping." DisplayHint="True">
                    <Grid ColumnDefinitions="*, Auto">
                        <Slider Grid.Column="0" x:Name="LoopDurationSlider" 
                                Value="{Binding LoopDuration}" 
                                Minimum="1" 
                                Maximum="30" />
                        <TextBox Grid.Column="1" 
                                 Width="50"
                                 Margin="5 0 0 0"
                                 Text="{Binding LoopDuration}" 
                                 IsReadOnly="True"
                                 IsEnabled="False"/>
                    </Grid>
                </controls1:LabeledControl>
                
                <controls1:LabeledControl Text="UI Scaling (Experimental):">
                    <Grid ColumnDefinitions="*,Auto">
                        <Slider Grid.Column="0" 
                                Minimum="1" 
                                Maximum="3"
                                IsSnapToTickEnabled="True"
                                TickFrequency=".1"
                                Value="{Binding UiScaling}"
                        ></Slider>
                        <TextBox Grid.Column="1" 
                                 Width="50" 
                                 Text="{Binding UiScaling}" 
                                 TextAlignment="Right" 
                                 IsReadOnly="True" 
                                 IsEnabled="False"
                        ></TextBox>
                    </Grid>
                </controls1:LabeledControl>
                
            </StackPanel>
        </DockPanel>
    </LayoutTransformControl>
</Window>
